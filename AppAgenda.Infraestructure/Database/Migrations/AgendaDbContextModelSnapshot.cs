// <auto-generated />
using System;
using AppAgenda.Infraestructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppAgenda.Infraestructure.Database.Migrations
{
    [DbContext(typeof(AgendaDbContext))]
    partial class AgendaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppAgenda.Infraestructure.Database.Entities.AgendaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdEvento")
                        .HasColumnType("int")
                        .HasColumnName("idEvento");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.HasKey("Id");

                    b.HasIndex("IdEvento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Agenda", "AGD");
                });

            modelBuilder.Entity("AppAgenda.Infraestructure.Database.Entities.EventoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CantidadParticipantes")
                        .HasColumnType("int")
                        .HasColumnName("cantidadParticipantes");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lugar");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("Evento", "AGD");
                });

            modelBuilder.Entity("AppAgenda.Infraestructure.Database.Entities.EventoParticipanteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdEvento")
                        .HasColumnType("int")
                        .HasColumnName("idEvento");

                    b.Property<int>("IdParticipante")
                        .HasColumnType("int")
                        .HasColumnName("idParticipante");

                    b.HasKey("Id");

                    b.HasIndex("IdEvento");

                    b.HasIndex("IdParticipante");

                    b.ToTable("EventoParticipante", "AGD");
                });

            modelBuilder.Entity("AppAgenda.Infraestructure.Database.Entities.ParticipanteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("Participante", "AGD");
                });

            modelBuilder.Entity("AppAgenda.Infraestructure.Database.Entities.UsuarioEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombre");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rol");

                    b.HasKey("Id");

                    b.ToTable("Usuario", "AGD");
                });

            modelBuilder.Entity("AppAgenda.Infraestructure.Database.Entities.AgendaEntity", b =>
                {
                    b.HasOne("AppAgenda.Infraestructure.Database.Entities.EventoEntity", "Evento")
                        .WithMany("Agenda")
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAgenda.Infraestructure.Database.Entities.UsuarioEntity", "Usuario")
                        .WithMany("Agenda")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AppAgenda.Infraestructure.Database.Entities.EventoParticipanteEntity", b =>
                {
                    b.HasOne("AppAgenda.Infraestructure.Database.Entities.EventoEntity", "Evento")
                        .WithMany("Participantes")
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppAgenda.Infraestructure.Database.Entities.ParticipanteEntity", "Participante")
                        .WithMany("Eventos")
                        .HasForeignKey("IdParticipante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("AppAgenda.Infraestructure.Database.Entities.EventoEntity", b =>
                {
                    b.Navigation("Agenda");

                    b.Navigation("Participantes");
                });

            modelBuilder.Entity("AppAgenda.Infraestructure.Database.Entities.ParticipanteEntity", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("AppAgenda.Infraestructure.Database.Entities.UsuarioEntity", b =>
                {
                    b.Navigation("Agenda");
                });
#pragma warning restore 612, 618
        }
    }
}
